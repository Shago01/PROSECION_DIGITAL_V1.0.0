describe('üìö Pruebas para el DTO RequestDTONazareno', () => {
  it('debe ser creado correctamente con datos v√°lidos', () => {
    expect(
      () =>
        new RequestDTONazareno(
          'CC',
          'M',
          '12345678',
          'Juan',
          'Carlos',
          'P√©rez',
          'G√≥mez',
          new Date('1993-05-15'),
          'juan@example.com',
          '1234567890',
          'Calle 123',
          'Colombia',
          'Bogot√°',
          'Cundinamarca',
        ),
    ).not.toThrow();
  });

  it('debe lanzar un error si el tipo de documento es inv√°lido', () => {
    expect(
      () =>
        new RequestDTONazareno(
          'XX',
          'M',
          '12345678',
          'Juan',
          'Carlos',
          'P√©rez',
          'G√≥mez',
          new Date('1993-05-15'),
          'juan@example.com',
          '1234567890',
          'Calle 123',
          'Colombia',
          'Bogot√°',
          'Cundinamarca',
        ),
    ).toThrow(AppError);
  });

  it('debe lanzar un error si el n√∫mero de documento est√° vac√≠o', () => {
    expect(
      () =>
        new RequestDTONazareno(
          'CC',
          'M',
          '',
          'Juan',
          'Carlos',
          'P√©rez',
          'G√≥mez',
          new Date('1993-05-15'),
          'juan@example.com',
          '1234567890',
          'Calle 123',
          'Colombia',
          'Bogot√°',
          'Cundinamarca',
        ),
    ).toThrow(AppError);
  });

  it('debe lanzar un error si el nombre est√° vac√≠o', () => {
    expect(
      () =>
        new RequestDTONazareno(
          'CC',
          'M',
          '12345678',
          '',
          'Carlos',
          'P√©rez',
          'G√≥mez',
          new Date('1993-05-15'),
          'juan@example.com',
          '1234567890',
          'Calle 123',
          'Colombia',
          'Bogot√°',
          'Cundinamarca',
        ),
    ).toThrow(AppError);
  });

  it('debe lanzar un error si el apellido est√° vac√≠o', () => {
    expect(
      () =>
        new RequestDTONazareno(
          'CC',
          'M',
          '12345678',
          'Juan',
          'Carlos',
          '',
          'G√≥mez',
          new Date('1993-05-15'),
          'juan@example.com',
          '1234567890',
          'Calle 123',
          'Colombia',
          'Bogot√°',
          'Cundinamarca',
        ),
    ).toThrow(AppError);
  });

  it('debe lanzar un error si el sexo es inv√°lido', () => {
    expect(
      () =>
        new RequestDTONazareno(
          'CC',
          'X',
          '12345678',
          'Juan',
          'Carlos',
          'P√©rez',
          'G√≥mez',
          new Date('1993-05-15'),
          'juan@example.com',
          '1234567890',
          'Calle 123',
          'Colombia',
          'Bogot√°',
          'Cundinamarca',
        ),
    ).toThrow(AppError);
  });

  it('debe lanzar un error si la fecha de nacimiento est√° en el futuro', () => {
    expect(
      () =>
        new RequestDTONazareno(
          'CC',
          'M',
          '12345678',
          'Juan',
          'Carlos',
          'P√©rez',
          'G√≥mez',
          new Date('2099-05-15'),
          'juan@example.com',
          '1234567890',
          'Calle 123',
          'Colombia',
          'Bogot√°',
          'Cundinamarca',
        ),
    ).toThrow(AppError);
  });

  it('debe lanzar un error si el email es inv√°lido', () => {
    expect(
      () =>
        new RequestDTONazareno(
          'CC',
          'M',
          '12345678',
          'Juan',
          'Carlos',
          'P√©rez',
          'G√≥mez',
          new Date('1993-05-15'),
          'correo-invalido',
          '1234567890',
          'Calle 123',
          'Colombia',
          'Bogot√°',
          'Cundinamarca',
        ),
    ).toThrow(AppError);
  });

  it('debe lanzar un error si el n√∫mero de tel√©fono est√° vac√≠o', () => {
    expect(
      () =>
        new RequestDTONazareno(
          'CC',
          'M',
          '12345678',
          'Juan',
          'Carlos',
          'P√©rez',
          'G√≥mez',
          new Date('1993-05-15'),
          'juan@example.com',
          '',
          'Calle 123',
          'Colombia',
          'Bogot√°',
          'Cundinamarca',
        ),
    ).toThrow(AppError);
  });

  it('debe lanzar un error si la direcci√≥n est√° vac√≠a', () => {
    expect(
      () =>
        new RequestDTONazareno(
          'CC',
          'M',
          '12345678',
          'Juan',
          'Carlos',
          'P√©rez',
          'G√≥mez',
          new Date('1993-05-15'),
          'juan@example.com',
          '1234567890',
          '',
          'Colombia',
          'Bogot√°',
          'Cundinamarca',
        ),
    ).toThrow(AppError);
  });

  it('debe lanzar un error si el pa√≠s est√° vac√≠o', () => {
    expect(
      () =>
        new RequestDTONazareno(
          'CC',
          'M',
          '12345678',
          'Juan',
          'Carlos',
          'P√©rez',
          'G√≥mez',
          new Date('1993-05-15'),
          'juan@example.com',
          '1234567890',
          'Calle 123',
          '',
          'Bogot√°',
          'Cundinamarca',
        ),
    ).toThrow(AppError);
  });

  it('debe lanzar un error si la ciudad est√° vac√≠a', () => {
    expect(
      () =>
        new RequestDTONazareno(
          'CC',
          'M',
          '12345678',
          'Juan',
          'Carlos',
          'P√©rez',
          'G√≥mez',
          new Date('1993-05-15'),
          'juan@example.com',
          '1234567890',
          'Calle 123',
          'Colombia',
          '',
          'Cundinamarca',
        ),
    ).toThrow(AppError);
  });

  it('debe lanzar un error si el departamento est√° vac√≠o', () => {
    expect(
      () =>
        new RequestDTONazareno(
          'CC',
          'M',
          '12345678',
          'Juan',
          'Carlos',
          'P√©rez',
          'G√≥mez',
          new Date('1993-05-15'),
          'juan@example.com',
          '1234567890',
          'Calle 123',
          'Colombia',
          'Bogot√°',
          '',
        ),
    ).toThrow(AppError);
  });
});
